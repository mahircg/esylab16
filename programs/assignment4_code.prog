reset: 		br always >main
			nop
hardfault:	reti
			nop
memfault:	reti
			nop
sw_irq:		br always >sw_irq_handler

.align
sw_addr: .word 0x000F0004
led_addr: .word 0x000F0000



.align
sp_init:   .word 0x40C
ptr_axialmeter: .word 0x400
ptr_prev_state: .word 0x404

//uses r3 as axialmeter and r4 as prevaxialmeter
sw_irq_handler:		
		ld08 r5,r2		//Copy axialmeter into prevaxialstate
		st08 r3,r5
		ld16 r5,r1		//Read axialmeter
		st08 r2,r5		//Store axialmeter value in mem
		reti

main:
		ldr sp, >sp_init
           	clr sr
		ldr r0,>led_addr
		ldr r1,>sw_addr
		ldr r2,>ptr_axialmeter		//Assign pointer adresses
		ldr r3,>ptr_prev_state	
		clr r4
		ld32 r4,r2			//Set memory locs to zero
		ld32 r4,r3
		clr r8	//r8 is zero
loop:		
		ld08 r6,r2	//r6 stores current value
		ld08 r7,r3	//r7 stores previous value
		xor r4,r6,r7
		cmp eq r4,r8  //check if there is a change
		br true >loop //keep checking until change
		nop
		and r9,r4,r6
		cmp neq r9,r8
		br true >loop
		nop
		addi r4,1
		st08 r0,r4
		br always >loop
		nop	
